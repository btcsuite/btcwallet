version: 2
run:
  # If you change this please run `make lint` to see where else it needs to be
  # updated as well.
  go: "1.24.6"

  # timeout for analysis
  timeout: 10m

linters-settings:
  govet:
    # Don't report about shadowed variables
    check-shadowing: false

  gofmt:
    # simplify code: gofmt with `-s` option, true by default
    simplify: true

  nlreturn:
    # Size of the block (including return statement that is still "OK")
    # so no return split required.
    block-size: 3

  funlen:
    # Checks the number of lines in a function.
    # If lower than 0, disable the check.
    lines: 100
    # Checks the number of statements in a function.
    statements: 50

  whitespace:
    multi-func: true
    multi-if: true


linters:
  enable-all: true
  disable:
    # Global variables are used in many places throughout the code base.
    - gochecknoglobals

    # We want to allow short variable names.
    - varnamelen

    # We want to allow TODOs.
    - godox

    # Instances of table driven tests that don't pre-allocate shouldn't trigger
    # the linter.
    - prealloc

    # Init functions are used by loggers throughout the codebase.
    - gochecknoinits

    # Deprecated linters. See https://golangci-lint.run/usage/linters/.
    - bodyclose
    - contextcheck
    - nilerr
    - noctx
    - rowserrcheck
    - sqlclosecheck
    - tparallel
    - unparam
    - wastedassign

    # Disable whitespace linter as it has conflict rules against our
    # contribution guidelines. See https://github.com/bombsimon/wsl/issues/109.
    - wsl

    # Allow using default empty values.
    - exhaustruct

    # Allow exiting case select faster by putting everything in default.
    - exhaustive

    # Allow tests to be put in the same package.
    - testpackage

    # Don't run the cognitive related linters.
    - gocognit
    - gocyclo
    - maintidx
    - cyclop

    # Allow customized interfaces to be returned from functions.
    - ireturn

    # Disable too many blank identifiers check. We won't be able to run this
    # unless a large refactor has been applied to old code.
    - dogsled

    # We don't wrap errors.
    - wrapcheck

    # We use ErrXXX instead.
    - errname

    # Disable nil check to allow returning multiple nil values.
    - nilnil
    
    # We often split tests into separate test functions. If we are forced to
    # call t.Helper() within those functions, we lose the information where
    # exactly a test failed in the generated failure stack trace.
    - thelper
    
    # Some of the tests cannot be parallelized. On the other hand, we don't
    # gain much performance with this check so we disable it for now until
    # unit tests become our CI bottleneck.
    - paralleltest

    # Disable tagalign
    - tagalign

    # TODO(yy): create a list of allowed packages to import before enabling
    # this linter.
    - depguard

issues:
  # Only check issues in the new code.
  new-from-rev: 3f48b446215c751ea4ba0c30fb04413ab9f1a7c7

  exclude-rules:
    # Exclude gosec from running for tests so that tests with weak randomness
    # (math/rand) will pass the linter.
    - path: _test\.go
      linters:
        - gosec
        - errcheck
        - dupl
